[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_familiars",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_food",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_coins",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_karmicEnergy",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_familiarsItem",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_marketplace",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_karmicWellSpring",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_tbaRegistry",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_tbaAccountImpl",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "ECDSAInvalidSignature",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "length",
                "type": "uint256"
            }
        ],
        "name": "ECDSAInvalidSignatureLength",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
            }
        ],
        "name": "ECDSAInvalidSignatureS",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "EnforcedPause",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "ExpectedPause",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "owner",
                "type": "address"
            }
        ],
        "name": "OwnableInvalidOwner",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "OwnableUnauthorizedAccount",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "Paused",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "_newVerifier",
                "type": "address"
            }
        ],
        "name": "SetVerifier",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "Unpaused",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
            }
        ],
        "name": "_getTba",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "_coinsAmt",
                "type": "uint256"
            },
            {
                "internalType": "bytes",
                "name": "_signature",
                "type": "bytes"
            }
        ],
        "name": "buyFoodToMarketplace",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
            },
            {
                "internalType": "bytes",
                "name": "_signature",
                "type": "bytes"
            }
        ],
        "name": "buyTreasureBox",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "coins",
        "outputs": [
            {
                "internalType": "contract Coins",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_to",
                "type": "address"
            },
            {
                "internalType": "string",
                "name": "_uri",
                "type": "string"
            },
            {
                "internalType": "bytes",
                "name": "_signature",
                "type": "bytes"
            }
        ],
        "name": "createNPC",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "_mouthTokenId",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "_headTokenId",
                "type": "uint256"
            },
            {
                "internalType": "bytes",
                "name": "_signature",
                "type": "bytes"
            }
        ],
        "name": "equipItem",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "_karmicEnergyAmt",
                "type": "uint256"
            },
            {
                "internalType": "bytes",
                "name": "_signature",
                "type": "bytes"
            }
        ],
        "name": "exchangeKarmicEnergy",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "familiars",
        "outputs": [
            {
                "internalType": "contract Familiars",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "familiarsItem",
        "outputs": [
            {
                "internalType": "contract FamiliarsItem",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "food",
        "outputs": [
            {
                "internalType": "contract Food",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "enum FamiliarsLib.Location",
                "name": "_location",
                "type": "uint8"
            }
        ],
        "name": "getLocationRequirements",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint8",
                        "name": "minHealth",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "healthCost",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "minKarmicEnergy",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "karmicEnergyCost",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "minFood",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "foodCost",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "minCoin",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "coinCost",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "getCoin",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "getHealth",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "getKarmicEnergy",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint8",
                        "name": "getFood",
                        "type": "uint8"
                    }
                ],
                "internalType": "struct FamiliarsLib.Requirements",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
            }
        ],
        "name": "getNPCStats",
        "outputs": [
            {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
            },
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            },
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "head",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "mouth",
                        "type": "uint256"
                    }
                ],
                "internalType": "struct FamiliarsLib.EquipItems",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
            },
            {
                "internalType": "enum FamiliarsLib.Location",
                "name": "_location",
                "type": "uint8"
            },
            {
                "internalType": "bytes",
                "name": "_signature",
                "type": "bytes"
            }
        ],
        "name": "goToLocation",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "karmicEnergy",
        "outputs": [
            {
                "internalType": "contract KarmicEnergy",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "karmicWellSpring",
        "outputs": [
            {
                "internalType": "contract KarmicWellSpring",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "marketplace",
        "outputs": [
            {
                "internalType": "contract Marketplace",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "nonce",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "paused",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bool",
                "name": "isPause",
                "type": "bool"
            }
        ],
        "name": "setPauseContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_newVerifier",
                "type": "address"
            }
        ],
        "name": "setVerifier",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]